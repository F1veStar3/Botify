# Generated by Django 5.0.7 on 2024-09-13 13:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, verbose_name='Название')),
                ('description', models.TextField(max_length=2000, verbose_name='Описание')),
                ('img', models.ImageField(help_text='Рекомендованное разрешение: 800x533', upload_to='events_imgs/', verbose_name='Изображение')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('tag', models.CharField(max_length=225, verbose_name='Тег')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Контент: Новости',
                'verbose_name_plural': 'Контент: Новости',
            },
        ),
        migrations.CreateModel(
            name='MapPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, verbose_name='Название')),
                ('latitude', models.FloatField(verbose_name='Широта')),
                ('longitude', models.FloatField(verbose_name='Долгота')),
            ],
            options={
                'verbose_name': 'Контент: Точка на карте',
                'verbose_name_plural': 'Контент: Точки на карте',
            },
        ),
        migrations.CreateModel(
            name='Massage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('subject', models.CharField(max_length=225, verbose_name='Тема')),
                ('message', models.TextField(max_length=2000, verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Коммуникация: Вопросы',
                'verbose_name_plural': 'Коммуникация: Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('description', models.TextField(max_length=2000)),
                ('svg_icon', models.TextField(help_text='Вставте SVG код')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Контент: Возможности',
                'verbose_name_plural': 'Контент: Возможности',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(default=1, primary_key=True, serialize=False)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Цена за единицу')),
                ('total_quantity', models.PositiveIntegerField(verbose_name='Общее количество')),
                ('minimum_purchase_quantity', models.PositiveIntegerField(verbose_name='Минимальное количество для покупки')),
                ('remaining_quantity', models.PositiveIntegerField(verbose_name='Оставшееся количество')),
            ],
            options={
                'verbose_name': 'Оплата: Акция',
                'verbose_name_plural': 'Оплата: Акции',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Коммуникация: Уведомление',
                'verbose_name_plural': ' Коммуникация: Уведомления',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, upload_to='logos/', verbose_name='Логотип')),
                ('balance', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='Баланс')),
                ('total_spent', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='На общую сумму')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Мониторинг: Профиль',
                'verbose_name_plural': 'Мониторинг: Профили',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=225, verbose_name='Тема')),
                ('message', models.TextField(max_length=2000, verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Коммуникация: Отзыв',
                'verbose_name_plural': 'Коммуникация: Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Итоговая цена')),
                ('stripe_checkout_id', models.CharField(max_length=500, null=True, verbose_name='stripe_id')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.stock', verbose_name='Акция')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Оплата: Транзакция',
                'verbose_name_plural': 'Оплата: Транзакции',
            },
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата запроса')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.transaction', verbose_name='Транзакция')),
            ],
            options={
                'verbose_name': 'Коммуникация: Запрос на возврат',
                'verbose_name_plural': 'Коммуникация:  Запросы на возврат',
            },
        ),
    ]
